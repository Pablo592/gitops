{{- $namespace := .Values.group | replace "." "" -}}
{{- $name := .Values.project -}}
{{- $vaultAuth := (printf "vault-auth-%s-%s" $namespace $name) -}}


apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name:  {{ $name }}-auth
  namespace: {{ $namespace }}
spec:
  method: kubernetes
  mount: {{ .Values.cluster }}
  kubernetes:
      {{- if eq (.Values.cluster) "prod" }}
    role: {{ $namespace }}
      {{- else }}
    role: {{ .Values.cluster }}
      {{- end }}
    serviceAccount: default
    audiences:
      - vault
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: {{ $namespace }}-{{ $name }}-harbor-secret
  namespace: {{ $namespace }}
spec:
  destination:
    create: true
    name: {{ $namespace }}-{{ $name }}-harbor-secret
    type: kubernetes.io/dockerconfigjson
  mount: k8secrets
  path: /{{ .Values.cluster }}/registry
  refreshAfter: 24h
  type: kv-v2
  vaultAuthRef: {{ $name }}-auth
---

{{- if or .Values.secrets .Values.fileFromSecret .Values.environmentFromSecret }}
    {{- if or .Values.secrets.enabled .Values.fileFromSecret.enabled .Values.environmentFromSecret.enabled }}

{{- $allPaths := list -}}

      {{- range .Values.secrets.list }}
  {{- $allPaths = append $allPaths .path }}
      {{- end }}

      {{- range .Values.fileFromSecret.list }}
  {{- $allPaths = append $allPaths .path }}
      {{- end }}

      {{- range .Values.environmentFromSecret.list }}
  {{- $allPaths = append $allPaths .path }}
      {{- end }}

{{- $uniquePaths := uniq $allPaths }}


      {{- range $p := $uniquePaths }}

  {{- $ctx := dict "path" $p "name" $name "namespace" $namespace -}}
  {{- include "base_webserver.path-secret" $ctx }}
  
---
      {{- end }}
    {{- end }}
{{- end }}



